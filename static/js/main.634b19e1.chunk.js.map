{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","logo","type","id","aboutText","onClick","toggle","htmlFor","defaultProps","TextForm","useState","text","setText","placeholder","rows","onBlur","e","target","value","split","length","toUpperCase","toLowerCase","map","word","charAt","slice","join","cap1","document","getElementById","select","newText","About","color","backgroundColor","style","setStyle","textchange","setTextchange","border","App","setMode","console","log","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.634b19e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.logo}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n\r\n            <div className=\"form-check form-switch\" onClick={props.toggle}>\r\n              <input\r\n                className=\"form-check-input \"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label \"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode} Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logo: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  logo: \"Your Logo\",\r\n  aboutText: \"About\",\r\n};\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TextForm = (props) => {\r\n  const [text, setText] = useState(\"Your Text Area , You want to Analyze\");\r\n\r\n  //Upper case Function\r\n  function handleUpClick() {\r\n    // console.log(\"Up clicked\" + text);\r\n    setText(text.toUpperCase());\r\n  }\r\n\r\n  //Lower case Function\r\n  function handleDoClick() {\r\n    // console.log(\"Down clicked\" + text);\r\n    setText(text.toLowerCase());\r\n  }\r\n  //clear Function\r\n  function handleCleClick() {\r\n    // console.log(\"clear clicked\" + text);\r\n    setText(\"\");\r\n  }\r\n\r\n  //Titleclick Function\r\n  function handleTiClick() {\r\n    function titleCase(str) {\r\n      let d = str\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .map((word) => {\r\n          return word.charAt(0).toUpperCase() + word.slice(1);\r\n        });\r\n      return d.join(\" \");\r\n    }\r\n\r\n    setText(titleCase(text));\r\n  }\r\n\r\n  //Capital case Function\r\n\r\n  function handleCapClick() {\r\n    function capitalCase(cap1) {\r\n      let f = cap1.toLowerCase().charAt(0).toUpperCase() + cap1.slice(1).toLowerCase();\r\n\r\n      return f;\r\n    }\r\n    setText(capitalCase(text));\r\n  }\r\n\r\n  //Handle Copy click\r\n  function handleCopyClick() {\r\n      let copyText = document.getElementById(\"mybox\")\r\n       copyText.select();\r\n    //    navigator.clipboard.writeText(copyText.value)\r\n  }\r\n\r\n  //Remove extra spaces\r\n  function handleRemoveSpaceClick() {\r\n      let newText = text.split(/[ ] + /);\r\n      setText(newText.join(\" \"))\r\n  }\r\n  //HandleChange Function\r\n  function handleChange(e) {\r\n    setText(e.target.value);\r\n    // console.log(\"handlechange\");\r\n  }\r\n  return (\r\n    <>\r\n      <h1>{props.text}</h1>\r\n      <div>\r\n        <textarea\r\n          className=\"form-control\"\r\n          placeholder=\"Your Text Area\"\r\n          rows=\"5\"\r\n          //   value={text}\r\n          // onChange={handleChange}\r\n\r\n          onBlur={handleChange}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div>\r\n        <hr />\r\n\r\n        <p>\r\n          {text.split(\" \").length} words & {text.length} characters\r\n        </p>\r\n        <h2> Preview</h2>\r\n        <textarea className=\"form-control\" rows=\"5\" value={text} id=\"mybox\"></textarea>\r\n        <button className=\"btn btn-primary my-3 \" onClick={handleUpClick}>\r\n          Set To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleDoClick}>\r\n          Set To LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleCleClick}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleTiClick}>\r\n          Set To Title Case\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleCapClick}>\r\n          Set To Capital Case\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleCopyClick}>\r\n         Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleRemoveSpaceClick}>\r\n       Remove Extra Space\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import React, { useState } from \"react\";\r\n\r\nconst About = () => {\r\n  const [style, setStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n\r\n  const [textchange, setTextchange] = useState(\"Enable Dark Mode\");\r\n  //Toggle wrapper , Dark and Light Mode\r\n\r\n  function toggleWrap() {\r\n    if (style.color === \"black\") {\r\n      setStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        border: \"1px solid white\",\r\n      });\r\n\r\n      setTextchange(\"Enable Light Mode\");\r\n    } else {\r\n      setStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setTextchange(\"Enable Dark Mode\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container my-5\" style={style}>\r\n        <h1 className=\"my-5\">About Us</h1>\r\n        <div className=\"accordion my-3\" id=\"accordionExample\" style={style}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={style}\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={style}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={style}\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={style}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={style}\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={style}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={toggleWrap}>\r\n          {textchange}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState({\n    color: \"light\",\n  });\n\n  function toggle() {\n    console.log(\"You are toggle\");\n    if (mode.color === \"light\") {\n      setMode({\n        color: \"dark\",\n      });\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n    } else {\n      setMode({\n        color: \"light\",\n      });\n\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n\n    }\n  }\n\n  return (\n    <>\n      <Navbar\n        logo={\"TextUtils\"}\n        aboutText={\"About Us\"}\n        mode={mode.color}\n        toggle={toggle}\n      />\n\n      <div className=\"container my-5\">\n        <TextForm text=\"Enter Your Text and Analyze\" />\n      </div>\n\n      <About />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}